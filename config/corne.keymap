/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NUM 1
#define NAV 2
#define FUN 3
#define MOUSE 4
#define BOARD 5
#define DVORAK 6
#define GAME 7

&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <150>;
  quick-tap-ms = <100>;
};

&lt {
  flavor = "tap-preferred";
  tapping_term_ms = <150>;
  quick-tap-ms = <100>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE DELETE SEMI SQT DOT COMMA SLASH>;
};

/ {
  behaviors {
    mt_shft: mt_shft {
      compatible = "zmk,behavior-hold-tap";
      label = "shift modtap";
      #binding-cells = <2>;
      tapping_term_ms = <125>;
      quick-tap-ms = <100>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    mt_gui: mt_gui {
      compatible = "zmk,behavior-hold-tap";
      label = "gui modtap";
      #binding-cells = <2>;
      tapping_term_ms = <200>;
      quick-tap-ms = <100>;
      require-prior-idle-ms = <150>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    mt_actl: mt_actl {
      compatible = "zmk,behavior-hold-tap";
      label = "gui modtap";
      #binding-cells = <2>;
      tapping_term_ms = <200>;
      quick-tap-ms = <100>;
      require-prior-idle-ms = <150>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    lt_spc: lt_spc {
      compatible = "zmk,behavior-hold-tap";
      label = "space modtap";
      #binding-cells = <2>;
      tapping_term_ms = <175>;
      quick-tap-ms = <150>;
      require-prior-idle-ms = <150>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&kp>;
    };

    &mmv {
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        time-to-max-speed-ms = <45>;
        acceleration-exponent = <1>;
    };

  };

  keymap {
    compatible = "zmk,keymap";

    BASE_LAYER {
        display-name = "BASE";
        bindings = <
    &kp ESC    &mt_actl LALT Q &mt_gui  LGUI W &mt_actl LCTRL E &mt_shft LSHFT R &kp T &kp Y &mt_shft RSHFT U &mt_actl RCTRL I &mt_gui  RGUI O &mt_actl LALT P    &kp LBKT
    &caps_word &mt_gui  LGUI A &mt_actl LALT S &mt_shft LSHFT D &mt_actl LCTRL F &kp G &kp H &mt_actl RCTRL J &mt_shft RSHFT K &mt_actl LALT L &mt_gui  RGUI SEMI &kp SQT
    &kp LSHFT  &kp Z           &kp X            &kp C           &kp V            &kp B &kp N &kp M            &kp COMMA        &kp DOT         &kp FSLH           &kp RSHFT
    &lt BOARD TAB &lt FUN ESC &lt NUM BSPC  &lt_spc MOUSE SPACE &lt NAV ENTER &lt BOARD DEL
        >;
    };
    // num/sym
    NUM_LAYER {
        display-name = "NUM";
        bindings = <
    &kp GRAVE &mt_actl LALT EXCL &mt_gui  LGUI AT &mt_actl LCTRL HASH &mt_shft LSHFT DLLR &kp PRCNT  &kp CARET   &mt_shft RSHFT AMPS &mt_actl RCTRL ASTRK &mt_gui  RGUI LPAR &mt_actl LALT RPAR &kp EQUAL
    &kp TILDE &mt_gui  LGUI N1   &mt_actl LALT N2 &mt_shft LSHFT N3   &mt_actl LCTRL N4   &kp N5     &kp N6      &mt_actl RCTRL N7   &mt_shft RSHFT N8    &mt_actl LALT N9   &mt_gui  RGUI N0   &kp MINUS
    &trans    &kp GRAVE          &kp TILDE        &kp E               &kp UNDER           &kp PLUS   &kp LS(Z)   &kp RBKT            &kp RBRC             &kp PIPE           &kp BSLH           &trans
    &trans &trans &trans &trans &trans &trans
        >;
    };
    // nav
    NAV_LAYER {
        display-name = "NAV";
        bindings = <
    &trans &trans     &trans     &trans       &kp K_PP     &trans   &kp PG_UP   &kp HOME        &kp UP      &kp END     &kp PSCRN &kp F12
    &trans &trans     &trans     &trans       &trans       &trans   &kp PG_DN   &kp LEFT        &kp DOWN    &kp UP      &kp RIGHT &kp ENTER
    &trans &kp K_PREV &kp K_NEXT &kp K_VOL_DN &kp K_VOL_UP &kp K_PP &kp LC(TAB) &kp LC(LS(TAB)) &kp LC(TAB) &kp LS(INS) &trans    &trans
    &trans &trans &trans &trans &trans &trans
        >;
    };
    // fun
    FUN_LAYER {
        display-name = "FUN";
        bindings = <
    &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6          &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
    &trans &trans &trans &trans &trans &trans &kp PSCRN       &trans &trans &trans &trans  &kp F12
    &trans &trans &trans &trans &trans &trans &kp PAUSE_BREAK &trans &trans &trans &trans  &trans
    &trans &trans &trans &trans &trans &trans
        >;
    };
    // mouse
    // TODO: add mouse movement and scroll support once ZMK does
    MOUSE_LAYER {
        display-name = "MOUSE";
        bindings = <
    &trans &trans &mkp MB1 &mkp MB3 &mkp MB2 &trans &msc SCRL_UP   &mkp MB1       &mkp MB3        &mkp MB2     &trans          &trans
    &trans &trans &trans   &trans   &trans   &trans &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_UP &mmv MOVE_RIGHT &trans
    &trans &trans &trans   &trans   &trans   &trans &trans         &msc SCRL_LEFT &msc SCRL_RIGHT &kp  LS(INS) &trans          &trans
    &trans &trans &trans &trans &trans &trans
        >;
    };
    // keyboard
    BOARD_LAYER {
        display-name = "BOARD";
        bindings = <
    &bootloader &tog BASE    &tog DVORAK  &tog GAME    &trans       &trans       &trans &trans &trans &trans &trans &bootloader
    &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans
    &trans      &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &trans
    &trans &tog FUN &tog NUM  &tog MOUSE &tog NAV &trans
        >;
    };
    // dvorak
    DVORAK_LAYER {
        display-name = "DVORAK";
        bindings = <
    &kp ESC    &mt_actl LALT SQT &mt_gui  LGUI COMMA &mt_actl LCTRL DOT &mt_shft LSHFT P &kp Y &kp F &mt_shft RSHFT G &mt_actl RCTRL C &mt_gui  RGUI R &mt_actl LALT L &kp FSLH
    &caps_word &mt_gui  LGUI A   &mt_actl LALT O     &mt_shft LSHFT E   &mt_actl LCTRL U &kp I &kp D &mt_actl RCTRL H &mt_shft RSHFT T &mt_actl LALT N &mt_gui  RGUI S &kp MINUS
    &kp LSHFT  &kp SEMI          &kp Q               &kp J              &kp K            &kp X &kp B &kp M            &kp W            &kp V           &kp Z           &kp RSHFT
    &trans &trans &trans &trans &trans &trans
        >;
    };
    // gaming
    GAME_LAYER {
        display-name = "GAME";
        bindings = <
    &kp ESC   &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I     &kp O   &kp P    &kp LBKT
    &kp TAB   &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K     &kp L   &kp SEMI &kp SQT
    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
    &lt BOARD TAB &lt FUN ESC &lt NUM SPACE  &lt_spc MOUSE SPACE &lt NAV ENTER &lt BOARD DEL
        >;
    };
  };
};
